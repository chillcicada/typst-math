/// Stealed from https://github.com/typst/typst/blob/main/crates/typst/src/symbols/symbol.rs
use phf::phf_map;
use std::fmt::{self, Debug};
use typst_math_macros::symbols;
use wasm_bindgen::prelude::wasm_bindgen;

#[derive(Debug, Clone)]
#[wasm_bindgen(getter_with_clone)]
pub struct Symbol {
    pub symbol: char,
    pub category: Category,
}

#[derive(Debug, Clone, Copy)]
#[wasm_bindgen]
pub enum Category {
    KEYWORD,
    COMPARISON,
    OPERATOR,
    NUMBER,
    LETTER,
    SET,
    DEFAULT,
}
impl fmt::Display for Category {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        fmt::Debug::fmt(self, f)
    }
}

#[derive(Debug, Clone, Copy)]
#[wasm_bindgen]
pub enum Color {
    KEYWORD,
    COMPARISON,
    OPERATOR,
    LETTER,
    SET,
    NUMBER,
}

/// The list of general symbols.
pub const SYMBOLS: phf::Map<&str, Symbol> = symbols! {
// pub const SYMBOLS: &str = symbols! {
    // Control.
    wj: '\u{2060}'; DEFAULT,
    zwj: '\u{200D}'; DEFAULT,
    zwnj: '\u{200C}'; DEFAULT,
    zws: '\u{200B}'; DEFAULT,
    lrm: '\u{200E}'; DEFAULT,
    rlm: '\u{200F}'; DEFAULT,

    // Spaces.
    space: [
        ' ',
        nobreak: '\u{A0}',
        nobreak.narrow: '\u{202F}',
        en: '\u{2002}',
        quad: '\u{2003}',
        third: '\u{2004}',
        quarter: '\u{2005}',
        sixth: '\u{2006}',
        med: '\u{205F}',
        fig: '\u{2007}',
        punct: '\u{2008}',
        thin: '\u{2009}',
        hair: '\u{200A}',
    ]; DEFAULT,

    // Delimiters.
    paren: [l: '(', r: ')', t: '⏜', b: '⏝']; DEFAULT,
    brace: [l: '{', r: '}', t: '⏞', b: '⏟']; DEFAULT,
    bracket: [l: '[', l.double: '⟦', r: ']', r.double: '⟧', t: '⎴', b: '⎵']; DEFAULT,
    shell: [l: '〔', r: '〕', t: '⏠', b: '⏡']; DEFAULT,
    bar: [v: '|', v.double: '‖', v.triple: '⦀', v.broken: '¦', v.circle: '⦶', h: '―']; DEFAULT,
    fence: [l: '⧘', l.double: '⧚', r: '⧙', r.double: '⧛', dotted: '⦙']; DEFAULT,
    angle: [
        '∠',
        l: '⟨',
        r: '⟩',
        l.double: '《',
        r.double: '》',
        acute: '⦟',
        arc: '∡',
        arc.rev: '⦛',
        rev: '⦣',
        right: '∟',
        right.rev: '⯾',
        right.arc: '⊾',
        right.dot: '⦝',
        right.sq: '⦜',
        spatial: '⟀',
        spheric: '∢',
        spheric.rev: '⦠',
        spheric.top: '⦡',
    ]; DEFAULT,

    // Punctuation.
    amp: ['&', inv: '⅋']; DEFAULT,
    ast: [
        op: '∗',
        basic: '*',
        low: '⁎',
        double: '⁑',
        triple: '⁂',
        small: '﹡',
        circle: '⊛',
        square: '⧆',
    ]; DEFAULT,
    at: '@'; DEFAULT,
    backslash: ['\\', circle: '⦸', not: '⧷']; DEFAULT,
    co: '℅'; DEFAULT,
    colon: [':', double: '∷', eq: '≔', double.eq: '⩴']; DEFAULT,
    comma: ','; DEFAULT,
    dagger: ['†', double: '‡']; DEFAULT,
    dash: [
        en: '–',
        em: '—',
        fig: '‒',
        wave: '〜',
        colon: '∹',
        circle: '⊝',
        wave.double: '〰',
    ]; DEFAULT,
    dot: [
        op: '⋅',
        basic: '.',
        c: '·',
        circle: '⊙',
        circle.big: '⨀',
        square: '⊡',
        double: '¨',
        triple: '\u{20db}',
        quad: '\u{20dc}',
    ]; DEFAULT,
    excl: ['!', double: '‼', inv: '¡', quest: '⁉']; DEFAULT,
    quest: ['?', double: '⁇', excl: '⁈', inv: '¿']; DEFAULT,
    interrobang: '‽'; DEFAULT,
    hash: '#'; DEFAULT,
    hyph: ['‐', minus: '\u{2D}', nobreak: '\u{2011}', point: '‧', soft: '\u{ad}']; DEFAULT,
    percent: '%'; DEFAULT,
    copyright: ['©', sound: '℗']; DEFAULT,
    permille: '‰'; DEFAULT,
    pilcrow: ['¶', rev: '⁋']; DEFAULT,
    section: '§'; DEFAULT,
    semi: [';', rev: '⁏']; DEFAULT,
    slash: ['/', double: '⫽', triple: '⫻', big: '\u{29f8}']; DEFAULT,
    dots: [h.c: '⋯', h: '…', v: '⋮', down: '⋱', up: '⋰']; DEFAULT,
    tilde: [
        op: '∼',
        basic: '~',
        dot: '⩪',
        eq: '≃',
        eq.not: '≄',
        eq.rev: '⋍',
        equiv: '≅',
        equiv.not: '≇',
        nequiv: '≆',
        not: '≁',
        rev: '∽',
        rev.equiv: '≌',
        triple: '≋',
    ]; COMPARISON,

    // Accents, quotes, and primes.
    acute: ['´', double: '˝']; DEFAULT,
    breve: '˘'; DEFAULT,
    caret: '‸'; DEFAULT,
    caron: 'ˇ'; DEFAULT,
    hat: '^'; DEFAULT,
    diaer: '¨'; DEFAULT,
    grave: '`'; DEFAULT,
    macron: '¯'; DEFAULT,
    quote: [
        double: '"',
        single: '\'',
        l.double: '“',
        l.single: '‘',
        r.double: '”',
        r.single: '’',
        angle.l.double: '«',
        angle.l.single: '‹',
        angle.r.double: '»',
        angle.r.single: '›',
        high.double: '‟',
        high.single: '‛',
        low.double: '„',
        low.single: '‚',
    ]; DEFAULT,
    prime: [
        '′',
        rev: '‵',
        double: '″',
        double.rev: '‶',
        triple: '‴',
        triple.rev: '‷',
        quad: '⁗',
    ]; DEFAULT,

    // https://en.wikipedia.org/wiki/List_of_mathematical_symbols_by_subject
    // Arithmetic.
    plus: [
        '+',
        circle: '⊕',
        circle.arrow: '⟴',
        circle.big: '⨁',
        dot: '∔',
        minus: '±',
        small: '﹢',
        square: '⊞',
        triangle: '⨹',
    ]; OPERATOR,
    minus: [
        '−',
        circle: '⊖',
        dot: '∸',
        plus: '∓',
        square: '⊟',
        tilde: '≂',
        triangle: '⨺',
    ]; OPERATOR,
    div: ['÷', circle: '⨸']; OPERATOR,
    times: [
        '×',
        big: '⨉',
        circle: '⊗',
        circle.big: '⨂',
        div: '⋇',
        three.l: '⋋',
        three.r: '⋌',
        l: '⋉',
        r: '⋊',
        square: '⊠',
        triangle: '⨻',
    ]; OPERATOR,
    ratio: '∶'; OPERATOR,

    // Relations.
    eq: [
        '=',
        star: '≛',
        circle: '⊜',
        colon: '≕',
        def: '≝',
        delta: '≜',
        equi: '≚',
        est: '≙',
        gt: '⋝',
        lt: '⋜',
        m: '≞',
        not: '≠',
        prec: '⋞',
        quest: '≟',
        small: '﹦',
        succ: '⋟',
        triple: '≡',
        quad: '≣',
    ]; COMPARISON,
    gt: [
        '>',
        circle: '⧁',
        curly: '≻',
        curly.approx: '⪸',
        curly.double: '⪼',
        curly.eq: '≽',
        curly.eq.not: '⋡',
        curly.equiv: '⪴',
        curly.napprox: '⪺',
        curly.nequiv: '⪶',
        curly.not: '⊁',
        curly.ntilde: '⋩',
        curly.tilde: '≿',
        dot: '⋗',
        approx: '⪆',
        double: '≫',
        eq: '≥',
        eq.slant: '⩾',
        eq.lt: '⋛',
        eq.not: '≱',
        equiv: '≧',
        lt: '≷',
        lt.not: '≹',
        napprox: '⪊',
        nequiv: '≩',
        not: '≯',
        ntilde: '⋧',
        small: '﹥',
        tilde: '≳',
        tilde.not: '≵',
        tri: '⊳',
        tri.eq: '⊵',
        tri.eq.not: '⋭',
        tri.not: '⋫',
        triple: '⋙',
        triple.nested: '⫸',
    ]; COMPARISON,
    lt: [
        '<',
        circle: '⧀',
        curly: '≺',
        curly.approx: '⪷',
        curly.double: '⪻',
        curly.eq: '≼',
        curly.eq.not: '⋠',
        curly.equiv: '⪳',
        curly.napprox: '⪹',
        curly.nequiv: '⪵',
        curly.not: '⊀',
        curly.ntilde: '⋨',
        curly.tilde: '≾',
        dot: '⋖',
        approx: '⪅',
        double: '≪',
        eq: '≤',
        eq.slant: '⩽' ,
        eq.gt: '⋚',
        eq.not: '≰',
        equiv: '≦',
        gt: '≶',
        gt.not: '≸',
        napprox: '⪉',
        nequiv: '≨',
        not: '≮',
        ntilde: '⋦',
        small: '﹤',
        tilde: '≲',
        tilde.not: '≴',
        tri: '⊲',
        tri.eq: '⊴',
        tri.eq.not: '⋬',
        tri.not: '⋪',
        triple: '⋘',
        triple.nested: '⫷',
    ]; COMPARISON,
    approx: ['≈', eq: '≊', not: '≉']; COMPARISON,
    prec: [
        '≺',
        approx: '⪷',
        double: '⪻',
        eq: '≼',
        eq.not: '⋠',
        equiv: '⪳',
        napprox: '⪹',
        nequiv: '⪵',
        not: '⊀',
        ntilde: '⋨',
        tilde: '≾',
    ]; COMPARISON,
    succ: [
        '≻',
        approx: '⪸',
        double: '⪼',
        eq: '≽',
        eq.not: '⋡',
        equiv: '⪴',
        napprox: '⪺',
        nequiv: '⪶',
        not: '⊁',
        ntilde: '⋩',
        tilde: '≿',
    ]; COMPARISON,
    equiv: ['≡', not: '≢']; COMPARISON,
    prop: '∝'; DEFAULT,

    // Set theory.
    emptyset: ['∅', rev: '⦰']; DEFAULT,
    nothing: ['∅', rev: '⦰']; DEFAULT,
    without: '∖'; DEFAULT,
    complement: '∁'; DEFAULT,
    in: [
        '∈',
        not: '∉',
        rev: '∋',
        rev.not: '∌',
        rev.small: '∍',
        small: '∊',
    ]; KEYWORD,
    subset: [
        '⊂',
        dot: '⪽',
        double: '⋐',
        eq: '⊆',
        eq.not: '⊈',
        eq.sq: '⊑',
        eq.sq.not: '⋢',
        neq: '⊊',
        not: '⊄',
        sq: '⊏',
        sq.neq: '⋤',
    ]; KEYWORD,
    supset: [
        '⊃',
        dot: '⪾',
        double: '⋑',
        eq: '⊇',
        eq.not: '⊉',
        eq.sq: '⊒',
        eq.sq.not: '⋣',
        neq: '⊋',
        not: '⊅',
        sq: '⊐',
        sq.neq: '⋥',
    ]; KEYWORD,
    union: [
        '∪',
        arrow: '⊌',
        big: '⋃',
        dot: '⊍',
        dot.big: '⨃',
        double: '⋓',
        minus: '⩁',
        or: '⩅',
        plus: '⊎',
        plus.big: '⨄',
        sq: '⊔',
        sq.big: '⨆',
        sq.double: '⩏',
    ]; KEYWORD,
    sect: [
        '∩',
        and: '⩄',
        big: '⋂',
        dot: '⩀',
        double: '⋒',
        sq: '⊓',
        sq.big: '⨅',
        sq.double: '⩎',
    ]; KEYWORD,

    // Calculus.
    infinity: '∞'; DEFAULT,
    oo: '∞'; DEFAULT,
    diff: '∂'; DEFAULT, // Deprecation planned
    partial: '∂'; DEFAULT,
    gradient: '∇'; DEFAULT,
    nabla: '∇'; DEFAULT,
    sum: ['∑', integral: '⨋']; DEFAULT,
    product: ['∏', co: '∐']; DEFAULT,
    integral: [
        '∫',
        arrow.hook: '⨗',
        ccw: '⨑',
        cont: '∮',
        cont.ccw: '∳',
        cont.cw: '∲',
        cw: '∱',
        dash: '⨍',
        dash.double: '⨎',
        double: '∬',
        quad: '⨌',
        sect: '⨙',
        slash: '⨏',
        square: '⨖',
        surf: '∯',
        times: '⨘',
        triple: '∭',
        union: '⨚',
        vol: '∰',
    ]; DEFAULT,
    laplace: '∆'; DEFAULT,

    // Logic.
    forall: '∀'; KEYWORD,
    exists: ['∃', not: '∄']; DEFAULT,
    top: '⊤'; DEFAULT,
    bot: '⊥'; DEFAULT,
    not: '¬'; DEFAULT,
    and: ['∧', big: '⋀', curly: '⋏', dot: '⟑', double: '⩓']; DEFAULT,
    or: ['∨', big: '⋁', curly: '⋎', dot: '⟇', double: '⩔']; DEFAULT,
    xor: ['⊕', big: '⨁']; DEFAULT,
    models: '⊧'; DEFAULT,
    forces: ['⊩', not: '⊮']; DEFAULT,
    therefore: '∴'; DEFAULT,
    because: '∵'; DEFAULT,
    qed: '∎'; DEFAULT,

    // Function and category theory.
    compose: '∘'; DEFAULT,
    convolve: '∗'; DEFAULT,
    multimap: '⊸'; DEFAULT,

    // Number theory.
    divides: ['∣', not: '∤']; DEFAULT,

    // Algebra.
    wreath: '≀'; DEFAULT,

    // Geometry.
    parallel: ['∥', circle: '⦷', not: '∦']; DEFAULT,
    perp: ['⟂', circle: '⦹']; DEFAULT,

    // Miscellaneous Technical.
    diameter: '⌀'; DEFAULT,
    join: ['⨝', r: '⟖', l: '⟕', l.r: '⟗']; DEFAULT,
    degree: ['°', c: '℃', f: '℉']; DEFAULT,
    smash: '⨳'; DEFAULT,

    // Currency.
    bitcoin: '₿'; DEFAULT,
    dollar: '$'; DEFAULT,
    euro: '€'; DEFAULT,
    franc: '₣'; DEFAULT,
    lira: '₺'; DEFAULT,
    peso: '₱'; DEFAULT,
    pound: '£'; DEFAULT,
    ruble: '₽'; DEFAULT,
    rupee: '₹'; DEFAULT,
    won: '₩'; DEFAULT,
    yen: '¥'; DEFAULT,

    // Miscellaneous.
    ballot: ['☐', x: '☒']; DEFAULT,
    checkmark: ['✓', light: '🗸']; DEFAULT,
    floral: ['❦', l: '☙', r: '❧']; DEFAULT,
    notes: [up: '🎜', down: '🎝']; DEFAULT,
    refmark: '※'; DEFAULT,
    servicemark: '℠'; DEFAULT,
    maltese: '✠'; DEFAULT,
    suit: [
        club.filled: '♣',
        club.stroked: '♧',
        diamond.filled: '♦',
        diamond.stroked: '♢',
        heart.filled: '♥',
        heart.stroked: '♡',
        spade.filled: '♠',
        spade.stroked: '♤',
    ]; DEFAULT,

    // Shapes.
    bullet: '•'; DEFAULT,
    circle: [
        stroked: '○',
        stroked.tiny: '∘',
        stroked.small: '⚬',
        stroked.big: '◯',
        filled: '●',
        filled.tiny: '⦁',
        filled.small: '∙',
        filled.big: '⬤',
        dotted: '◌',
        nested: '⊚',
    ]; DEFAULT,
    ellipse: [
        stroked.h: '⬭',
        stroked.v: '⬯',
        filled.h: '⬬',
        filled.v: '⬮',
    ]; DEFAULT,
    triangle: [
        stroked.t: '△',
        stroked.b: '▽',
        stroked.r: '▷',
        stroked.l: '◁',
        stroked.bl: '◺',
        stroked.br: '◿',
        stroked.tl: '◸',
        stroked.tr: '◹',
        stroked.small.t: '▵',
        stroked.small.b: '▿',
        stroked.small.r: '▹',
        stroked.small.l: '◃',
        stroked.rounded: '🛆',
        stroked.nested: '⟁',
        stroked.dot: '◬',
        filled.t: '▲',
        filled.b: '▼',
        filled.r: '▶',
        filled.l: '◀',
        filled.bl: '◣',
        filled.br: '◢',
        filled.tl: '◤',
        filled.tr: '◥',
        filled.small.t: '▴',
        filled.small.b: '▾',
        filled.small.r: '▸',
        filled.small.l: '◂',
    ]; DEFAULT,
    square: [
        stroked: '□',
        stroked.tiny: '▫',
        stroked.small: '◽',
        stroked.medium: '◻',
        stroked.big: '⬜',
        stroked.dotted: '⬚',
        stroked.rounded: '▢',
        filled: '■',
        filled.tiny: '▪',
        filled.small: '◾',
        filled.medium: '◼',
        filled.big: '⬛',
    ]; DEFAULT,
    rect: [
        stroked.h: '▭',
        stroked.v: '▯',
        filled.h: '▬',
        filled.v: '▮',
    ]; DEFAULT,
    penta: [stroked: '⬠', filled: '⬟']; DEFAULT,
    hexa: [stroked: '⬡', filled: '⬢']; DEFAULT,
    diamond: [
        stroked: '◇',
        stroked.small: '⋄',
        stroked.medium: '⬦',
        stroked.dot: '⟐',
        filled: '◆',
        filled.medium: '⬥',
        filled.small: '⬩',
    ]; DEFAULT,
    lozenge: [
        stroked: '◊',
        stroked.small: '⬫',
        stroked.medium: '⬨',
        filled: '⧫',
        filled.small: '⬪',
        filled.medium: '⬧',
    ]; DEFAULT,
    parallelogram: [
        stroked: '▱',
        filled: '▰',
    ]; DEFAULT,
    star: [op: '⋆', stroked: '☆', filled: '★']; DEFAULT,

    // Arrows, harpoons, and tacks.
    arrow: [
        r: '→',
        r.long.bar: '⟼',
        r.bar: '↦',
        r.curve: '⤷',
        r.dashed: '⇢',
        r.dotted: '⤑',
        r.double: '⇒',
        r.double.bar: '⤇',
        r.double.long: '⟹',
        r.double.long.bar: '⟾',
        r.double.not: '⇏',
        r.filled: '➡',
        r.hook: '↪',
        r.long: '⟶',
        r.long.squiggly: '⟿',
        r.loop: '↬',
        r.not: '↛',
        r.quad: '⭆',
        r.squiggly: '⇝',
        r.stop: '⇥',
        r.stroked: '⇨',
        r.tail: '↣',
        r.tilde: '⥲',
        r.triple: '⇛',
        r.twohead.bar: '⤅',
        r.twohead: '↠',
        r.wave: '↝',
        l: '←',
        l.bar: '↤',
        l.curve: '⤶',
        l.dashed: '⇠',
        l.dotted: '⬸',
        l.double: '⇐',
        l.double.bar: '⤆',
        l.double.long: '⟸',
        l.double.long.bar: '⟽',
        l.double.not: '⇍',
        l.filled: '⬅',
        l.hook: '↩',
        l.long: '⟵',
        l.long.bar: '⟻',
        l.long.squiggly: '⬳',
        l.loop: '↫',
        l.not: '↚',
        l.quad: '⭅',
        l.squiggly: '⇜',
        l.stop: '⇤',
        l.stroked: '⇦',
        l.tail: '↢',
        l.tilde: '⭉',
        l.triple: '⇚',
        l.twohead.bar: '⬶',
        l.twohead: '↞',
        l.wave: '↜',
        t: '↑',
        t.bar: '↥',
        t.curve: '⤴',
        t.dashed: '⇡',
        t.double: '⇑',
        t.filled: '⬆',
        t.quad: '⟰',
        t.stop: '⤒',
        t.stroked: '⇧',
        t.triple: '⤊',
        t.twohead: '↟',
        b: '↓',
        b.bar: '↧',
        b.curve: '⤵',
        b.dashed: '⇣',
        b.double: '⇓',
        b.filled: '⬇',
        b.quad: '⟱',
        b.stop: '⤓',
        b.stroked: '⇩',
        b.triple: '⤋',
        b.twohead: '↡',
        l.r: '↔',
        l.r.double: '⇔',
        l.r.double.long: '⟺',
        l.r.double.not: '⇎',
        l.r.filled: '⬌',
        l.r.long: '⟷',
        l.r.not: '↮',
        l.r.stroked: '⬄',
        l.r.wave: '↭',
        t.b: '↕',
        t.b.double: '⇕',
        t.b.filled: '⬍',
        t.b.stroked: '⇳',
        tr: '↗',
        tr.double: '⇗',
        tr.filled: '⬈',
        tr.hook: '⤤',
        tr.stroked: '⬀',
        br: '↘',
        br.double: '⇘',
        br.filled: '⬊',
        br.hook: '⤥',
        br.stroked: '⬂',
        tl: '↖',
        tl.double: '⇖',
        tl.filled: '⬉',
        tl.hook: '⤣',
        tl.stroked: '⬁',
        bl: '↙',
        bl.double: '⇙',
        bl.filled: '⬋',
        bl.hook: '⤦',
        bl.stroked: '⬃',
        tl.br: '⤡',
        tr.bl: '⤢',
        ccw: '↺',
        ccw.half: '↶',
        cw: '↻',
        cw.half: '↷',
        zigzag: '↯',
    ]; COMPARISON,
    arrows: [
        rr: '⇉',
        ll: '⇇',
        tt: '⇈',
        bb: '⇊',
        lr: '⇆',
        lr.stop: '↹',
        rl: '⇄',
        tb: '⇅',
        bt: '⇵',
        rrr: '⇶',
        lll: '⬱',
    ]; COMPARISON,
    arrowhead: [
        t: '⌃',
        b: '⌄',
    ]; DEFAULT,
    harpoon: [
        rt: '⇀',
        rt.bar: '⥛',
        rt.stop: '⥓',
        rb: '⇁',
        rb.bar: '⥟',
        rb.stop: '⥗',
        lt: '↼',
        lt.bar: '⥚',
        lt.stop: '⥒',
        lb: '↽',
        lb.bar: '⥞',
        lb.stop: '⥖',
        tl: '↿',
        tl.bar: '⥠',
        tl.stop: '⥘',
        tr: '↾',
        tr.bar: '⥜',
        tr.stop: '⥔',
        bl: '⇃',
        bl.bar: '⥡',
        bl.stop: '⥙',
        br: '⇂',
        br.bar: '⥝',
        br.stop: '⥕',
        lt.rt: '⥎',
        lb.rb: '⥐',
        lb.rt: '⥋',
        lt.rb: '⥊',
        tl.bl: '⥑',
        tr.br: '⥏',
        tl.br: '⥍',
        tr.bl: '⥌',
    ]; COMPARISON,
    harpoons: [
        rtrb: '⥤',
        blbr: '⥥',
        bltr: '⥯',
        lbrb: '⥧',
        ltlb: '⥢',
        ltrb: '⇋',
        ltrt: '⥦',
        rblb: '⥩',
        rtlb: '⇌',
        rtlt: '⥨',
        tlbr: '⥮',
        tltr: '⥣',
    ]; COMPARISON,
    tack: [
        r: '⊢',
        r.not: '⊬',
        r.long: '⟝',
        r.short: '⊦',
        r.double: '⊨',
        r.double.not: '⊭',
        l: '⊣',
        l.long: '⟞',
        l.short: '⫞',
        l.double: '⫤',
        t: '⊥',
        t.big: '⟘',
        t.double: '⫫',
        t.short: '⫠',
        b: '⊤',
        b.big: '⟙',
        b.double: '⫪',
        b.short: '⫟',
        l.r: '⟛',
    ]; DEFAULT,

    // Lowercase Greek.
    alpha: 'α'; LETTER,
    beta: ['β', alt: 'ϐ']; LETTER,
    chi: 'χ'; LETTER,
    delta: 'δ'; LETTER,
    epsilon: ['ε', alt: 'ϵ']; LETTER,
    eta: 'η'; LETTER,
    gamma: 'γ'; LETTER,
    iota: 'ι'; LETTER,
    kai: 'ϗ'; LETTER,
    kappa: ['κ', alt: 'ϰ']; LETTER,
    lambda: 'λ'; LETTER,
    mu: 'μ'; LETTER,
    nu: 'ν'; LETTER,
    ohm: ['Ω', inv: '℧']; LETTER,
    omega: 'ω'; LETTER,
    omicron: 'ο'; LETTER,
    phi: ['φ', alt: 'ϕ']; LETTER,
    pi: ['π', alt: 'ϖ']; LETTER,
    psi: 'ψ'; LETTER,
    rho: ['ρ', alt: 'ϱ']; LETTER,
    sigma: ['σ', alt: 'ς']; LETTER,
    tau: 'τ'; LETTER,
    theta: ['θ', alt: 'ϑ']; LETTER,
    upsilon: 'υ'; LETTER,
    xi: 'ξ'; LETTER,
    zeta: 'ζ'; LETTER,

    // Uppercase Greek.
    Alpha: 'Α'; LETTER,
    Beta: 'Β'; LETTER,
    Chi: 'Χ'; LETTER,
    Delta: 'Δ'; LETTER,
    Epsilon: 'Ε'; LETTER,
    Eta: 'Η'; LETTER,
    Gamma: 'Γ'; LETTER,
    Iota: 'Ι'; LETTER,
    Kai: 'Ϗ'; LETTER,
    Kappa: 'Κ'; LETTER,
    Lambda: 'Λ'; LETTER,
    Mu: 'Μ'; LETTER,
    Nu: 'Ν'; LETTER,
    Omega: 'Ω'; LETTER,
    Omicron: 'Ο'; LETTER,
    Phi: 'Φ'; LETTER,
    Pi: 'Π'; LETTER,
    Psi: 'Ψ'; LETTER,
    Rho: 'Ρ'; LETTER,
    Sigma: 'Σ'; LETTER,
    Tau: 'Τ'; LETTER,
    Theta: 'Θ'; LETTER,
    Upsilon: 'Υ'; LETTER,
    Xi: 'Ξ'; LETTER,
    Zeta: 'Ζ'; LETTER,

    // Hebrew.
    aleph: 'א'; LETTER,
    alef: 'א'; LETTER,
    beth: 'ב'; LETTER,
    bet: 'ב'; LETTER,
    gimmel: 'ג'; LETTER,
    gimel: 'ג'; LETTER,
    daleth: 'ד'; LETTER,
    dalet: 'ד'; LETTER,
    shin: 'ש'; LETTER,

    // Double-struck.
    AA: '𝔸'; SET,
    BB: '𝔹'; SET,
    CC: 'ℂ'; SET,
    DD: '𝔻'; SET,
    EE: '𝔼'; SET,
    FF: '𝔽'; SET,
    GG: '𝔾'; SET,
    HH: 'ℍ'; SET,
    II: '𝕀'; SET,
    JJ: '𝕁'; SET,
    KK: '𝕂'; SET,
    LL: '𝕃'; SET,
    MM: '𝕄'; SET,
    NN: 'ℕ'; SET,
    OO: '𝕆'; SET,
    PP: 'ℙ'; SET,
    QQ: 'ℚ'; SET,
    RR: 'ℝ'; SET,
    SS: '𝕊'; SET,
    TT: '𝕋'; SET,
    UU: '𝕌'; SET,
    VV: '𝕍'; SET,
    WW: '𝕎'; SET,
    XX: '𝕏'; SET,
    YY: '𝕐'; SET,
    ZZ: 'ℤ'; SET,

    // Miscellaneous letter-likes.
    ell: 'ℓ'; DEFAULT,
    planck: ['ℎ', reduce: 'ℏ']; DEFAULT,
    angstrom: 'Å'; DEFAULT,
    kelvin: 'K'; DEFAULT,
    Re: 'ℜ'; DEFAULT,
    Im: 'ℑ'; DEFAULT,
    dotless: [i: '𝚤', j: '𝚥']; DEFAULT,
};
